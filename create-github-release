#!/bin/bash
set -e
set -o pipefail
# DEBUG=true
ARTIFACTS=$*

if [[ ! -z "$DEBUG" ]]; then
  GITHUB_EVENT_PATH='./testdata/event.json'
  GITHUB_TOKEN='test_token'
  GITHUB_REPOSITORY='magistrate/dashboard'
fi

if [ "$ARTIFACTS" == "" ]; then
  echo "No arguments provided. Falling back to *.tgz"
  ARTIFACTS="*.tgz"

fi

if [[ ! -z "$TOKEN" ]]; then
  GITHUB_TOKEN=$TOKEN
fi

if [[ -z "$GITHUB_TOKEN" ]]; then
  echo "Set the GITHUB_TOKEN env variable."
  exit 1
fi

if [[ -z "$GITHUB_REPOSITORY" ]]; then
  echo "Set the GITHUB_REPOSITORY env variable."
  exit 1
fi

URI=https://api.github.com
UPLOADS_URI=https://uploads.github.com
API_VERSION=v3
API_HEADER="Accept: application/vnd.github.${API_VERSION}+json"
AUTH_HEADER="Authorization: token ${GITHUB_TOKEN}"
NEUTRAL_EXIT=78

main() {
  version=$(jq --raw-output .ref "$GITHUB_EVENT_PATH")
  ref_type=$(jq --raw-output .ref_type "$GITHUB_EVENT_PATH")

  echo "DEBUG -> ref: $ref_type version: $version"

  if [[ $ref_type == "tag" ]]; then
    repo_full_name=$(jq --raw-output .repository.full_name "$GITHUB_EVENT_PATH")

    echo "Creating release for ${repo_full_name} ${version}..."

    # https://developer.github.com/v3/repos/releases/#create-a-release
    release=$(curl -XPOST -sSLf -H "${AUTH_HEADER}" -H "${API_HEADER}" --data "{\"tag_name\": \"${version}\"}" "${URI}/repos/${repo_full_name}/releases")

    release_id=$(echo "$release" | jq --raw-output .id)
    echo "ReleaseID: ${release_id}"

    for f in $ARTIFACTS; do
      file=$(basename "$f")
      type=$(file -b --mime-type "$f")
      echo "Adding ${f} of type ${type} to release..."
      echo "${UPLOADS_URI}/repos/${repo_full_name}/releases/${release_id}/assets?name=${file}"

      # https://developer.github.com/v3/repos/releases/#upload-a-release-asset
      curl -XPOST -sSL \
        -H "${AUTH_HEADER}" \
        -H "${API_HEADER}" \
        -H "Content-Type: ${type}" \
        --data-binary "@$f" \
        "${UPLOADS_URI}/repos/${repo_full_name}/releases/${release_id}/assets?name=${file}"
    done

    echo "Release created successfully!"
    exit 0
  fi

  exit $NEUTRAL_EXIT
}

main "$@"
